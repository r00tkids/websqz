(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function f(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=f(e);fetch(e.href,t)}})();var D=`# version 300 es
precision highp float;in float p;out vec2 v_uv;void main(){v_uv=vec2(float(gl_VertexID&2),float((gl_VertexID<<1)&2))+p*0.;gl_Position=vec4(v_uv*vec2(2.,-2.)+vec2(-1.,1.),0,1);v_uv.y=1.-v_uv.y;}`,P=`# version 300 es
precision highp float;in vec2 v_uv;
#define PRIMARY_RAY_STATE 0
#define INDIRECT_RAY_STATE 1
#define DEPTH_OF_FIELD_STATE 2
#define COMPOSITE_STATE 3
#define METAL_TEXTURE 0
#define BRUSHED_METAL_TEXTURE 1
#define NUM_TEXTURES 2
#define NUM_INDIRECT_ITERATIONS 1200
uint ihash(uint x){uint state=x*747796405u+2891336453u;uint word=((state>>((state>>28u)+4u))^ state)*277803737u;return(word>>22u)^ word;}float hash(float x){return float(ihash(floatBitsToUint(x)))*(1.0/float(0xffffffffu));}float hash(vec2 v){return float(ihash(floatBitsToUint(v.x)^ ihash(floatBitsToUint(v.y))))*(1.0/float(0xffffffffu));}float hash(vec3 p){p=17.0*fract(p*0.3183099+vec3(.11,.17,.13));return fract(p.x*p.y*p.z*(p.x+p.y+p.z));}float smax(float a,float b,float k){float h=max(k-abs(a-b),0.0);return max(a,b)+h*h*0.25/k;}uint r_x,r_y,r_z,r_w,r_v;float rand(){uint t=r_x^(r_x>>7);r_x=r_y;r_y=r_z;r_z=r_w;r_w=r_v;r_v=(r_v^(r_v<<6))^(t^(t<<13));uint res=(r_y+r_y+1u)*r_v;return float(res)/4294967296.;}uint xorshift32(){r_x ^=(r_x<<13);r_x ^=(r_x>>17);return r_x ^=(r_x<<5);}void srand(uint seed){r_x=seed;r_v=xorshift32();r_w=xorshift32();r_z=xorshift32();r_y=xorshift32();}vec2 rand2(vec2 x){x=vec2(dot(x,vec2(127.1,311.7)),dot(x,vec2(269.5,183.3)));return(vec2(hash(x.x),hash(x.y))-.5)*2.;}float value_noise(vec2 p,float period,float offset){vec2 ip=mod(floor(p),period)+offset;vec2 u=fract(p);u=u*u*(3.0-2.0*u);float res=mix(mix(hash(ip),hash(mod(ip+vec2(1.0,0.0),period)),u.x),mix(hash(mod(ip+vec2(0.0,1.0),period)),hash(mod(ip+vec2(1.0,1.0),period)),u.x),u.y);return res*res;}float simplex_noise(in vec2 p){const float K1=0.366025404;const float K2=0.211324865;vec2 i=floor(p+(p.x+p.y)*K1);vec2 a=p-i+(i.x+i.y)*K2;float m=step(a.y,a.x);vec2 o=vec2(m,1.0-m);vec2 b=a-o+K2;vec2 c=a-1.0+2.0*K2;vec3 h=max(0.5-vec3(dot(a,a),dot(b,b),dot(c,c)),0.0);vec3 n=h*h*h*h*vec3(dot(a,rand2(i)),dot(b,rand2(i+o)),dot(c,rand2(i+1.0)));return dot(n,vec3(70.0));}float fbm(vec2 p,float period,float offset){float f=0.0;p*=period;f+=0.5000*value_noise(p,period,offset);p*=2.;period*=2.;f+=0.2500*value_noise(p,period,offset);p*=2.;period*=2.;f+=0.1250*value_noise(p,period,offset);p*=2.;period*=2.;f+=0.0625*value_noise(p,period,offset);return f/0.9375;}float fbm_simplex(vec2 p){float f=0.0;f+=0.5000*simplex_noise(p);p=p*2.02;f+=0.2500*simplex_noise(p);p=p*2.03;f+=0.1250*simplex_noise(p);p=p*2.01;f+=0.0625*simplex_noise(p);return(f/0.9375)*.5+.5;}float fbm_simplex_fast(vec2 p){float f=0.0;f+=0.5000*simplex_noise(p);p=p*2.02;f+=0.2500*simplex_noise(p);p=p*2.03;return(f/0.9375)*.5+.5;}
#define NUM_OCTAVES 5
float mod289(float x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 perm(vec4 x){return mod289(((x*34.0)+1.0)*x);}float noise(vec3 p){vec3 a=floor(p);vec3 d=p-a;d=d*d*(3.0-2.0*d);vec4 b=a.xxyy+vec4(0.0,1.0,0.0,1.0);vec4 k1=perm(b.xyxy);vec4 k2=perm(k1.xyxy+b.zzww);vec4 c=k2+a.zzzz;vec4 k3=perm(c);vec4 k4=perm(c+1.0);vec4 o1=fract(k3*(1.0/41.0));vec4 o2=fract(k4*(1.0/41.0));vec4 o3=o2*d.z+o1*(1.0-d.z);vec2 o4=o3.yw*d.x+o3.xz*(1.0-d.x);return o4.y*d.y+o4.x*(1.0-d.y);}float fbm(vec3 x){float v=0.0;float a=0.5;vec3 shift=vec3(100);for(int i=0;i<NUM_OCTAVES;++i){v+=a*noise(x);x=x*2.0+shift;a*=0.5;}return v;}uniform vec2 viewport_size;out vec4 frag_data;uniform vec3 cam_pos;uniform mat3 inverse_view_matrix;uniform int state;uniform int rendering_done;uniform int iteration;uniform sampler2D primary_ray_data;uniform sampler2D primary_ray_depth;uniform sampler2D prev_indirect_data;uniform sampler2D indirect_data;uniform sampler2D prev_dof_data;uniform sampler2D text;uniform float time;const float MAX_DEPTH=500.;const int SAMPLES_PER_ITERATION=10;const int MAX_BOUNCE=1;const float FOCAL_DIST=30.;const float LENS_RADIUS=.32;const float TER_HEIGHT=40.;const float square_2=1.414213;float pixel_size_f;float indirect_boost=1.;uniform int frame_id;
#define PI 3.14159265
#define TAU (2.*PI)
#define saturate(x) clamp(x, 0., 1.)
struct PbrParam{vec3 albedo;float roughness;float metallic;};float fCylinder(vec3 p,float r,float height){vec2 d=abs(vec2(length(p.xz),p.y))-vec2(r,height);return min(max(d.x,d.y),0.0)+length(max(d,0.0));}float vmax(vec3 v){return max(max(v.x,v.y),v.z);}float fBoxCheap(vec3 p,vec3 b){return vmax(abs(p)-b);}vec2 pMod2(inout vec2 p,vec2 size){vec2 c=floor((p+size*0.5)/size);p=mod(p+size*0.5,size)-size*0.5;return c;}float smooth_min(float d1,float d2,float k){float h=clamp(0.5+0.5*(d2-d1)/k,0.0,1.0);return mix(d2,d1,h)-k*h*(1.0-h);}
#define min_mat(d, new_mat) if (d < t) { mat = new_mat; t = d; }
float sdTriangleIsosceles(vec2 p,vec2 q){p.x=abs(p.x);vec2 a=p-q*clamp(dot(p,q)/dot(q,q),0.0,1.0);vec2 b=p-q*vec2(clamp(p.x/q.x,0.0,1.0),1.0);float s=-sign(q.y);vec2 d=min(vec2(dot(a,a),s*(p.x*q.y-p.y*q.x)),vec2(dot(b,b),s*(p.y-q.y)));return-sqrt(d.x)*sign(d.y);}float opExtrusion(vec3 p,float d,float h){vec2 w=vec2(d,abs(p.z)-h);return min(max(w.x,w.y),0.0)+length(max(w,0.0));}float pMod1(inout float p,float size,vec2 c_x){float c=round(p/size);p=p-c*size;if(c>c_x.y){p+=size*(c-c_x.y);c=c_x.y;}if(c<c_x.x){p+=size*(c-c_x.x);c=c_x.x;}return c;}void pR(inout vec2 p,float a){p=cos(a)*p+sin(a)*vec2(p.y,-p.x);}vec2 intersect_aabb(vec3 rp,vec3 rd,vec3 b_p,vec3 b_e){vec3 frac=1./rd;vec3 tmi=((b_p-b_e)-rp)*frac;vec3 tma=((b_p+b_e)-rp)*frac;vec3 t0=min(tmi,tma);vec3 t1=max(tmi,tma);return vec2(max(max(t0.x,t0.y),t0.z),min(min(t1.x,t1.y),t1.z));}float fHexagonCircumcircle(vec3 p,vec2 h){vec3 q=abs(p);return max(q.y-h.y,max(q.x*sqrt(3.)*0.5+q.z*0.5,q.z)-h.x);}float scene(vec3 p,out int mat){float t=1050.;min_mat(p.y,2);vec2 s=vec2(10.);vec2 id=round(p.xz/s);vec2 o=sign(p.xz-s*id);float d=1e20;int mat_2=0;for(int j=0;j<2;j++)for(int i=0;i<2;i++){vec2 rid=id+vec2(i,j)*o;vec2 r=p.xz-s*rid;float h=sin(rid.x+time*2.)*sin(rid.y+time*2.)*3.+12.;float new_d=fHexagonCircumcircle(vec3(r.x,p.y,r.y),vec2(4.,h));if(new_d<d){d=new_d;mat_2=3+int(smoothstep(8.,14.,h)*12.);}}min_mat(d,mat_2);return t;}float sceneD(vec3 p){int mat=0;return scene(p,mat);}
#define TER(p, e) fbm_simplex(p.xy*0.012 + e)*TER_HEIGHT
vec3 calc_normal(vec3 p,int mat){vec3 n=vec3(0.0);for(int i=int(v_uv.x);i<4;i++){vec3 e=0.5773*(2.0*vec3((((i+3)>>1)&1),((i>>1)&1),(i&1))-1.0);n+=e*sceneD(p+e*.1);}return normalize(n);}vec3 disk_sample(vec2 u){float r=sqrt(u.x);float theta=TAU*u.y;return vec3(r*cos(theta),r*sin(theta),0);}vec3 cosine_weighted_hemisphere_sample(vec2 u){vec3 d_s=disk_sample(u);d_s.z=sqrt(max(0.,1.-u.x));return d_s;}vec4 get_rotation_to_z(vec3 input_){if(input_.z<-0.99999)return vec4(1.,0.,0.,0.);return normalize(vec4(input_.y,-input_.x,0.f,1.f+input_.z));}vec4 get_rotation_from_z(vec3 input_){if(input_.z<-0.99999)return vec4(1.,0.,0.,0.);return normalize(vec4(-input_.y,input_.x,0.,1.+input_.z));}vec4 invert_rotation(vec4 q){return vec4(-q.x,-q.y,-q.z,q.w);}vec3 rotate_point(vec4 q,vec3 v){vec3 qAxis=vec3(q.x,q.y,q.z);return 2.*dot(qAxis,v)*qAxis+(q.w*q.w-dot(qAxis,qAxis))*v+2.*q.w*cross(qAxis,v);}float distribution_GGX(vec3 N,vec3 H,float a2){float NdotH=clamp(dot(N,H),0.00001,1.);float NdotH2=NdotH*NdotH;float nom=a2;float denom=(NdotH2*(a2-1.0)+1.0);denom=PI*denom*denom;return nom/denom;}float smith_G2_height_correlated_GGX_Lagarde(float a2,float NdotL,float NdotV){float a=NdotV*sqrt(a2+NdotL*(NdotL-a2*NdotL));float b=NdotL*sqrt(a2+NdotV*(NdotV-a2*NdotV));return 0.5/(a+b+0.0001);}vec3 fresnel_schlick(float cosTheta,vec3 F0){return F0+(1.0-F0)*pow(1.0-cosTheta,5.0);}vec3 calc_light(PbrParam pbr_param,vec3 N,vec3 V,vec3 L,vec3 radiance){L=-L;float a=pbr_param.roughness*pbr_param.roughness;float a2=a*a;vec3 H=normalize(V+L);float NdotL=clamp(dot(N,L),0.00001,1.);float NdotV=clamp(dot(N,V),0.00001,1.);vec3 F0=vec3(0.04);F0=mix(F0,pbr_param.albedo,pbr_param.metallic);vec3 F=fresnel_schlick(clamp(dot(H,V),0.00001,1.),F0);float NDF=distribution_GGX(N,H,a2);float G=smith_G2_height_correlated_GGX_Lagarde(a2,NdotL,NdotV);vec3 specular=NDF*G*F;vec3 kS=F;vec3 kD=vec3(1.0)-kS;kD*=1.0-pbr_param.metallic;return(kD*pbr_param.albedo/PI+specular)*radiance*NdotL;}float smith_G1_GGX(float alphaSquared,float NdotSSquared){return 2./(sqrt(((alphaSquared*(1.-NdotSSquared))+NdotSSquared)/NdotSSquared)+1.);}float smith_G2_Over_G1_Height_Correlated(float alphaSquared,float NdotL,float NdotV){float G1V=smith_G1_GGX(alphaSquared,NdotV*NdotV);float G1L=smith_G1_GGX(alphaSquared,NdotL*NdotL);return G1L/(G1V+G1L-G1V*G1L);}vec3 sampleGGXVNDF(vec3 Ve,vec2 alpha2D,vec2 u){vec3 Vh=normalize(vec3(alpha2D*Ve.xy,Ve.z));float lensq=dot(Vh.xy,Vh.xy);vec3 T1=lensq>0.0f ? vec3(-Vh.y,Vh.x,0.0f)*inversesqrt(lensq): vec3(1.,0.,0.);vec3 T2=cross(Vh,T1);float r=sqrt(u.x);float phi=TAU*u.y;float t1=r*cos(phi);float t2=r*sin(phi);float s=.5*(1.+Vh.z);t2=mix(sqrt(1.-t1*t1),t2,s);vec3 Nh=t1*T1+t2*T2+sqrt(max(0.,1.-t1*t1-t2*t2))*Vh;return normalize(vec3(alpha2D*Nh.xy,max(0.,Nh.z)));}vec3 specular_sample(PbrParam pbr_param,vec3 Vlocal,vec2 u,out vec3 weight){float a=pbr_param.roughness*pbr_param.roughness;float a2=a*a;vec3 Hlocal;if(pbr_param.roughness==0.){Hlocal=vec3(0,0,1.);}else{Hlocal=sampleGGXVNDF(Vlocal,vec2(a),u);}vec3 Llocal=reflect(-Vlocal,Hlocal);float HdotL=clamp(dot(Hlocal,Llocal),0.00001,1.);vec3 Nlocal=vec3(0,0,1);float NdotL=clamp(dot(Nlocal,Llocal),0.00001,1.);float NdotV=clamp(dot(Nlocal,Vlocal),0.00001,1.);vec3 F0=vec3(0.04);F0=mix(F0,pbr_param.albedo,pbr_param.metallic);vec3 F=fresnel_schlick(HdotL,F0);weight=F*smith_G2_Over_G1_Height_Correlated(a2,NdotL,NdotV);return Llocal;}float calc_soft_shadow(vec3 rp,vec3 rd){float res=1.0;float tmax=32.0;float t=0.02;int mat=0;float h;for(int i=0;i<50;i++){h=scene(rp+rd*t,mat);res=min(res,16.0*h/t);t+=clamp(h,0.05,0.40);if(res<0.005||t>tmax)break;}return clamp(res,0.0,1.0);}PbrParam pbr_param_from_mat(int mat,vec3 p,vec3 normal){if(mat==1){PbrParam pbr_param;pbr_param.albedo=vec3(.2);pbr_param.metallic=.0;pbr_param.roughness=.5;return pbr_param;}else if(mat==2){PbrParam pbr_param;pbr_param.albedo=vec3(.9,.92,.92);pbr_param.metallic=.6;pbr_param.roughness=.4;return pbr_param;}else if(mat>3){PbrParam pbr_param;pbr_param.albedo=mix(vec3(.9,.92,.92),vec3(.9,.04,.4),float(mat-3)/12.);pbr_param.metallic=.6;pbr_param.roughness=.4;return pbr_param;}PbrParam dummy;return dummy;}float ground_fog(vec3 rp,vec3 rd,float t){float tau=0.15;return 0.02*(exp(-tau*rp.y)-exp(-tau*(rp.y+t*rd.y)))/(tau*rd.y);}vec3 shade(int mat,vec3 p,vec3 rp,vec3 rd,vec3 normal,float volumetric_quality,out vec3 attenuation){vec3 sun=normalize(vec3(-1.,-.5,0));vec3 sky_col=mix(vec3(0.835,0.98,0.953),vec3(0.271,0.706,0.806),saturate(rd.y*12.));sky_col=mix(vec3(0.271,0.406,0.506),vec3(0.224,0.475,0.678),saturate(rd.y*4.));sky_col=mix(sky_col,vec3(0.086,0.127,0.135),saturate(rd.y));sky_col*=1./2.;vec3 color=vec3(0);float t=0.;if(mat==0){color=vec3(sky_col);t=1000.;}else{PbrParam pbr_param=pbr_param_from_mat(mat,p,normal);float sha=calc_soft_shadow(p+normal*.01,-sun);color=sha*calc_light(pbr_param,normal,normalize(rp-p),sun,vec3(2.));t=distance(p,rp);}float fog_f=saturate(exp(-.009*(t-40.)));color=color*vec3(1.,1.,0.1)*fog_f;color=mix(color,sky_col,1.-fog_f*.95);attenuation=vec3(1);return color;}float trace(vec3 rp,vec3 rd,float max_t,out int mat,float quality){float t=max_t;mat=0;float t_march=0.;for(int i=0;i<256;++i){vec3 p=rp+rd*t_march;int extra_mat;float d=scene(p,extra_mat);if(d<pixel_size_f*t_march){mat=extra_mat;break;}t_march+=d;if(t_march>t){break;}}t=min(t_march,t);return t;}vec3 bouncing_ray(vec3 rp,vec3 normal,PbrParam pbr){vec3 indirect_samples=vec3(0);vec3 tweight=vec3(1);vec3 prev_rp=cam_pos;for(int bounce=0;bounce<MAX_BOUNCE;++bounce){float spec_or_diffuse=rand();vec2 u_rand=vec2(rand(),rand());vec4 rot_local=get_rotation_to_z(normal);vec3 sample_dir_local=vec3(0,0,1);vec3 weight;if(spec_or_diffuse<=.5){sample_dir_local=cosine_weighted_hemisphere_sample(u_rand);weight=pbr.albedo*(1.0-pbr.metallic);}else{if(abs(dot(prev_rp,rp))<.1)break;vec3 Vlocal=rotate_point(rot_local,normalize(prev_rp-rp));sample_dir_local=specular_sample(pbr,Vlocal,u_rand,weight);}vec3 sample_dir_world=normalize(rotate_point(invert_rotation(rot_local),sample_dir_local));if(all(lessThanEqual(tweight,vec3(.00001)))||dot(normal,sample_dir_world)<=0.||all(lessThanEqual(weight,vec3(0.00001))))break;int mat=0;float t=trace(rp,sample_dir_world,MAX_DEPTH,mat,2.);vec3 p=rp+sample_dir_world*t;normal=calc_normal(p,mat);vec3 attenuation;vec3 direct_radiance=shade(mat,p,rp,sample_dir_world,normal,4.,attenuation);weight*=2.;pbr=pbr_param_from_mat(mat,p,normal);tweight*=weight;indirect_samples+=indirect_boost*direct_radiance*tweight;if(mat==0)break;tweight*=attenuation;prev_rp=rp;rp=p+normal*.1;}return indirect_samples;}void main(){vec2 uv=gl_FragCoord.xy/viewport_size;vec2 view=2.*uv-1.;view.x*=viewport_size.x/viewport_size.y;vec3 rp=cam_pos;float fov=.666;float f=1./tan(.5*fov);vec3 rd=inverse_view_matrix*normalize(vec3(view,-f));pixel_size_f=square_2/(viewport_size.y*f);uint unique_id=128u+uint(frame_id)*1000u+uint(gl_FragCoord.y*viewport_size.x+gl_FragCoord.x)+2000u*uint(viewport_size.x*viewport_size.y)*uint(iteration);srand(unique_id*2000u);vec4 primary_data=texture(primary_ray_data,uv);float primary_depth=texture(primary_ray_depth,uv).x*MAX_DEPTH;vec3 prev_dof=texture(prev_dof_data,v_uv).xyz;if(state==PRIMARY_RAY_STATE){int mat;float t=trace(rp,rd,MAX_DEPTH,mat,1.);vec3 normal=calc_normal(rp+rd*t,mat);gl_FragDepth=saturate(t/MAX_DEPTH);frag_data=vec4(normal,mat);}else if(state==INDIRECT_RAY_STATE){int mat=int(primary_data.w);vec3 normal=primary_data.xyz;vec3 p=rp+rd*primary_depth;p+=normal*.1;vec3 indirect_samples=vec3(0.);if(mat==0){frag_data=vec4(indirect_samples,1);return;}PbrParam primary_pbr=pbr_param_from_mat(mat,p,normal);for(int sample_idx=0;sample_idx<SAMPLES_PER_ITERATION;++sample_idx){indirect_samples+=bouncing_ray(p,normal,primary_pbr);}frag_data=vec4(indirect_samples,1);}else if(state==DEPTH_OF_FIELD_STATE){vec3 acc_sample=texture(prev_dof_data,uv).xyz;for(int sample_idx=0;sample_idx<SAMPLES_PER_ITERATION;++sample_idx){rd=normalize(vec3(view,-f));vec2 lens_uv=disk_sample(vec2(rand(),rand())).xy*LENS_RADIUS;float focal_t=FOCAL_DIST/-rd.z;vec3 p_focus=rd*focal_t;rp=vec3(lens_uv,0);rd=inverse_view_matrix*normalize(p_focus-rp);rp+=cam_pos;int mat;float t=trace(rp,rd,MAX_DEPTH,mat,.25);vec3 p=rp+rd*t;vec3 normal=calc_normal(p,mat);vec3 attenuation;vec3 direct_color=shade(mat,p,rp,rd,normal,1.,attenuation);vec3 real_rd=inverse(inverse_view_matrix)*normalize(p-cam_pos);float denom=-f/real_rd.z;vec2 real_uv=real_rd.xy*denom;real_uv=vec2(real_uv.x*9./16.,real_uv.y);real_uv=clamp((real_uv+1.)*.5,vec2(0),vec2(1));vec3 indirect_color=texture(prev_indirect_data,real_uv).xyz/float(NUM_INDIRECT_ITERATIONS*SAMPLES_PER_ITERATION);acc_sample+=direct_color+indirect_color*attenuation;}frag_data+=vec4(acc_sample,1);}else if(state==COMPOSITE_STATE){vec3 prev_indirect=0.5*(texture(indirect_data,v_uv).xyz+texture(prev_indirect_data,v_uv).xyz);vec3 color;if(rendering_done==1){color=prev_dof/float(min(300,(iteration-NUM_INDIRECT_ITERATIONS))*SAMPLES_PER_ITERATION);}else{vec3 p=rp+rd*primary_depth;vec3 indirect_radiance=prev_indirect/float(iteration*SAMPLES_PER_ITERATION);vec3 attenuation;vec3 direct_radiance=shade(int(primary_data.w),p,rp,rd,primary_data.xyz,.4,attenuation);float focal_plane_t=FOCAL_DIST/-rd.z;color=direct_radiance+attenuation*indirect_radiance;}color=sqrt(color);frag_data=vec4(color,1.);}}`,w=1e-6,R=typeof Float32Array<"u"?Float32Array:Array;Math.hypot||(Math.hypot=function(){for(var r=0,a=arguments.length;a--;)r+=arguments[a]*arguments[a];return Math.sqrt(r)});function F(){var r=new R(9);return R!=Float32Array&&(r[1]=0,r[2]=0,r[3]=0,r[5]=0,r[6]=0,r[7]=0),r[0]=1,r[4]=1,r[8]=1,r}function S(r,a){return r[0]=a[0],r[1]=a[1],r[2]=a[2],r[3]=a[4],r[4]=a[5],r[5]=a[6],r[6]=a[8],r[7]=a[9],r[8]=a[10],r}function I(r,a){if(r===a){var f=a[1],n=a[2],e=a[5];r[1]=a[3],r[2]=a[6],r[3]=f,r[5]=a[7],r[6]=n,r[7]=e}else r[0]=a[0],r[1]=a[3],r[2]=a[6],r[3]=a[1],r[4]=a[4],r[5]=a[7],r[6]=a[2],r[7]=a[5],r[8]=a[8];return r}function M(){var r=new R(16);return R!=Float32Array&&(r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[11]=0,r[12]=0,r[13]=0,r[14]=0),r[0]=1,r[5]=1,r[10]=1,r[15]=1,r}function X(r){return r[0]=1,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=1,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=1,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,r}function q(r,a,f,n){var e,t,i,o,c,l,s,u,v,m,p=a[0],x=a[1],h=a[2],_=n[0],T=n[1],y=n[2],g=f[0],A=f[1],b=f[2];return Math.abs(p-g)<w&&Math.abs(x-A)<w&&Math.abs(h-b)<w?X(r):(s=p-g,u=x-A,v=h-b,m=1/Math.hypot(s,u,v),s*=m,u*=m,v*=m,e=T*v-y*u,t=y*s-_*v,i=_*u-T*s,m=Math.hypot(e,t,i),m?(m=1/m,e*=m,t*=m,i*=m):(e=0,t=0,i=0),o=u*i-v*t,c=v*e-s*i,l=s*t-u*e,m=Math.hypot(o,c,l),m?(m=1/m,o*=m,c*=m,l*=m):(o=0,c=0,l=0),r[0]=e,r[1]=o,r[2]=s,r[3]=0,r[4]=t,r[5]=c,r[6]=u,r[7]=0,r[8]=i,r[9]=l,r[10]=v,r[11]=0,r[12]=-(e*p+t*x+i*h),r[13]=-(o*p+c*x+l*h),r[14]=-(s*p+u*x+v*h),r[15]=1,r)}var L=1e20;function O(r,a){a||(a={});var f=a.cutoff==null?.25:a.cutoff,n=a.radius==null?8:a.radius,e=a.channel||0,t,i,o,c,l,s,u,v,m,p,x;if(v=r,u=v.getContext("2d"),t=v.width,i=v.height,m=u.getImageData(0,0,t,i),c=m.data,s=4,o=Math.max(t,i),window.Uint8ClampedArray&&c instanceof window.Uint8ClampedArray||window.Uint8Array&&c instanceof window.Uint8Array)for(l=c,c=Array(t*i),p=0,x=Math.floor(l.length/s);p<x;p++)c[p]=l[p*s+e]/255;else if(s!==1)throw Error("Raw data can have only 1 value per pixel");var h=Array(t*i),_=Array(t*i),T=Array(o),y=Array(o),g=Array(o+1),A=Array(o);for(p=0,x=t*i;p<x;p++){var b=c[p];h[p]=b===1?0:b===0?L:Math.pow(Math.max(0,.5-b),2),_[p]=b===1?L:b===0?0:Math.pow(Math.max(0,b-.5),2)}U(h,t,i,T,y,A,g),U(_,t,i,T,y,A,g);var N=window.Float32Array?new Float32Array(t*i):new Array(t*i);for(p=0,x=t*i;p<x;p++)N[p]=Math.min(Math.max(1-((h[p]-_[p])/n+f),0),1);return N}function U(r,a,f,n,e,t,i){for(var o=0;o<a;o++){for(var c=0;c<f;c++)n[c]=r[c*a+o];for(z(n,e,t,i,f),c=0;c<f;c++)r[c*a+o]=e[c]}for(c=0;c<f;c++){for(o=0;o<a;o++)n[o]=r[c*a+o];for(z(n,e,t,i,a),o=0;o<a;o++)r[c*a+o]=Math.sqrt(e[o])}}function z(r,a,f,n,e){f[0]=0,n[0]=-1e20,n[1]=1e20;for(var t=1,i=0;t<e;t++){for(var o=(r[t]+t*t-(r[f[i]]+f[i]*f[i]))/(2*t-2*f[i]);o<=n[i];)i--,o=(r[t]+t*t-(r[f[i]]+f[i]*f[i]))/(2*t-2*f[i]);i++,f[i]=t,n[i]=o,n[i+1]=1e20}for(t=0,i=0;t<e;t++){for(;n[i+1]<t;)i++;a[t]=(t-f[i])*(t-f[i])+r[f[i]]}}let d={},E={};window.onload=()=>{let r=document.createElement("canvas");r.width=1230,r.height=2*128;let a=r.getContext("2d");a.fillStyle="#fff",a.font="64px Verdana",a.fillText("Black Valley",0,64),a.fillText("11.-13.06.2025, BLAKER, NORWAY",0,150);let f=O(r),n=document.getElementById("output");n.width=n.clientWidth,n.height=n.clientHeight;let e=n.getContext("webgl2",{alpha:!1});e.getExtension("EXT_color_buffer_float"),e.getExtension("OES_texture_float_linear"),e.getExtension("EXT_sRGB");let t=_=>{let T=e.createTexture();return e.bindTexture(e.TEXTURE_2D,T),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),_?(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST)):e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texImage2D(e.TEXTURE_2D,0,_?e.DEPTH_COMPONENT24:e.RGBA32F,n.clientWidth,n.clientHeight,0,_?e.DEPTH_COMPONENT:e.RGBA,_?e.UNSIGNED_INT:e.FLOAT,null),T};d.primary_ray_data=new Array(2),d.primary_ray_depth=new Array(2),d.indirect_ray_data=new Array(2),d.dof_data=new Array(2);for(let _=0;_<2;++_)d.primary_ray_data[_]=t(),d.primary_ray_depth[_]=t(!0),d.indirect_ray_data[_]=t(),d.dof_data[_]=t();d.text=e.createTexture(),e.bindTexture(e.TEXTURE_2D,d.text),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texImage2D(e.TEXTURE_2D,0,e.R32F,r.width,r.height,0,e.RED,e.FLOAT,f),E.primary_ray=new Array(2),E.indirect_rays=new Array(2),E.dof_acc=new Array(2);for(let _=0;_<2;++_)E.primary_ray[_]=e.createFramebuffer(),e.bindFramebuffer(e.FRAMEBUFFER,E.primary_ray[_]),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,d.primary_ray_data[_],0),e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,d.primary_ray_depth[_],0),E.indirect_rays[_]=e.createFramebuffer(),e.bindFramebuffer(e.FRAMEBUFFER,E.indirect_rays[_]),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,d.indirect_ray_data[_],0),E.dof_acc[_]=e.createFramebuffer();let i=e.createShader(e.VERTEX_SHADER);e.shaderSource(i,D),e.compileShader(i);let o=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(o,P),e.compileShader(o);let c=e.getShaderInfoLog(o);c&&console.log(c);let l=e.createProgram();e.attachShader(l,i),e.attachShader(l,o),e.linkProgram(l),e.bindAttribLocation(l,0,"p");let s=M(),u=[0,70,38];q(s,u,[-5,8,0],[0,1,0]);let v=I(F(),S(F(),s)),m=0,p=0,x=0;function h(_){if(requestAnimationFrame(h),p){p=!1;return}p=!0,_/=1e3,e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.useProgram(l);let T=0;e.uniform2f(e.getUniformLocation(l,"viewport_size"),n.clientWidth,n.clientHeight),e.uniform1i(e.getUniformLocation(l,"iteration"),T),e.uniformMatrix3fv(e.getUniformLocation(l,"inverse_view_matrix"),!1,v),e.uniform3fv(e.getUniformLocation(l,"cam_pos"),u),e.uniform1i(e.getUniformLocation(l,"rendering_done"),0),e.uniform1i(e.getUniformLocation(l,"primary_ray_data"),0),e.uniform1i(e.getUniformLocation(l,"primary_ray_depth"),1),e.uniform1i(e.getUniformLocation(l,"prev_indirect_data"),2),e.uniform1i(e.getUniformLocation(l,"indirect_data"),3),e.uniform1i(e.getUniformLocation(l,"text"),4),e.uniform1i(e.getUniformLocation(l,"frame_id"),x),e.uniform1f(e.getUniformLocation(l,"time"),_),e.bindFramebuffer(e.FRAMEBUFFER,E.primary_ray[0]),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.enable(e.DEPTH_TEST),e.uniform1i(e.getUniformLocation(l,"state"),0),e.drawArrays(e.TRIANGLES,0,3),e.disable(e.DEPTH_TEST),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,d.primary_ray_data[0]),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,d.primary_ray_depth[0]),e.bindFramebuffer(e.FRAMEBUFFER,E.indirect_rays[m]),e.clear(e.COLOR_BUFFER_BIT),e.uniform1i(e.getUniformLocation(l,"state"),1),e.drawArrays(e.TRIANGLES,0,3),m=+!m,T+=1,e.uniform1i(e.getUniformLocation(l,"iteration"),T),e.bindFramebuffer(e.FRAMEBUFFER,null),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,d.indirect_ray_data[+!m]),e.activeTexture(e.TEXTURE3),e.bindTexture(e.TEXTURE_2D,d.indirect_ray_data[m]),e.activeTexture(e.TEXTURE4),e.bindTexture(e.TEXTURE_2D,d.text),e.uniform1i(e.getUniformLocation(l,"state"),3),e.drawArrays(e.TRIANGLES,0,3);for(let y=0;y<4;++y)e.activeTexture(e.TEXTURE0+y),e.bindTexture(e.TEXTURE_2D,null);x++}requestAnimationFrame(h)};
